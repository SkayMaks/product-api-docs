openapi: 3.0.0
info:
  title: Products API
  description: API for managing products and orders
  version: 1.0.0
servers:
  - url: https://67e3044497fc65f535387590.mockapi.io/api
    description: Beeceptor mock server
tags:
  - name: products
    description: Operations with products
  - name: orders
    description: Order management
paths:
  /api/products:
    get:
      tags: [products]
      summary: Get list of all products
      responses:
        '200':
          description: List of products returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        '400':
          description: Bad request
        '404':
          description: Products not found
      security:
        - bearerAuth: []
    post:
      tags: [products]
      summary: Create a new product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCreate'
      responses:
        '201':
          description: Product created
        '400':
          description: Bad request - invalid data
        '401':
          description: Unauthorized
      security:
        - bearerAuth: []
  /api/products/{id}:
    get:
      tags: [products]
      summary: Get product by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
          description: Numeric ID of the product
      responses:
        '200':
          description: Product details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Bad request - invalid ID
        '404':
          description: Product not found
      security:
        - bearerAuth: []
    put:
      tags: [products]
      summary: Fully update product by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductUpdate'
      responses:
        '200':
          description: Product updated
        '400':
          description: Bad request - invalid data
        '404':
          description: Product not found
      security:
        - bearerAuth: []
    patch:
      tags: [products]
      summary: Partially update product by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductPartialUpdate'
      responses:
        '200':
          description: Product updated
        '400':
          description: Bad request - invalid data
        '404':
          description: Product not found
      security:
        - bearerAuth: []
    delete:
      tags: [products]
      summary: Delete product by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Product deleted
        '400':
          description: Bad request - invalid ID
        '404':
          description: Product not found
      security:
        - bearerAuth: []
  /api/orders:
    post:
      tags: [orders]
      summary: Create a new order
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderCreate'
      responses:
        '201':
          description: Order created
        '400':
          description: Bad request - invalid data
      security:
        - bearerAuth: []
components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        price:
          type: number
          format: float
          minimum: 0
        quantity:
          type: integer
          format: int32
          minimum: 0
      required:
        - id
        - name
        - description
        - price
        - quantity
    ProductCreate:
      type: object
      properties:
        name:
          type: string
          minLength: 1
        description:
          type: string
          minLength: 1
        price:
          type: number
          format: float
          minimum: 0
          exclusiveMinimum: true
        quantity:
          type: integer
          format: int32
          minimum: 1
      required:
        - name
        - description
        - price
        - quantity
    ProductUpdate:
      type: object
      properties:
        name:
          type: string
          minLength: 1
        description:
          type: string
          minLength: 1
      required:
        - name
        - description
    ProductPartialUpdate:
      type: object
      properties:
        name:
          type: string
          minLength: 1
        description:
          type: string
          minLength: 1
        price:
          type: number
          format: float
          minimum: 0
          exclusiveMinimum: true
        quantity:
          type: integer
          format: int32
          minimum: 1
    OrderCreate:
      type: object
      properties:
        customer_name:
          type: string
          minLength: 1
        customer_email:
          type: string
          format: email
        customer_address:
          type: string
          minLength: 1
        order_details:
          type: array
          items:
            type: object
            properties:
              product_id:
                type: integer
                format: int64
              quantity:
                type: integer
                format: int32
                minimum: 1
            required:
              - product_id
              - quantity
      required:
        - customer_name
        - customer_email
        - customer_address
        - order_details
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
