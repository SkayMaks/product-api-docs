openapi: 3.0.0
info:
  title: Products API
  description: API for managing products and orders
  version: 1.0.0
servers:
  - url: https://67e3044497fc65f535387590.mockapi.io
    description: MockAPI server
tags:
  - name: products
    description: Product operations
  - name: orders
    description: Order operations
paths:
  /api/products:
    get:
      tags: [products]
      summary: Get list of all products
      responses:
        '200':
          description: List of products successfully returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        '400':
          description: Bad request
        '404':
          description: Products not found
    post:
      tags: [products]
      summary: Create a new product
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCreate'
      responses:
        '201':
          description: Product successfully created
        '400':
          description: Invalid data in request
        '401':
          description: Unauthorized
        '500':
          description: Server error
  /api/products/{id}:
    get:
      tags: [products]
      summary: Get product by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
          description: Numeric ID of the product
      responses:
        '200':
          description: Product details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Bad request
        '404':
          description: Product not found
    put:
      tags: [products]
      summary: Fully update product by ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductUpdate'
      responses:
        '200':
          description: Product successfully updated
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Product not found
        '500':
          description: Server error
    delete:
      tags: [products]
      summary: Delete product by ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Product successfully deleted
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Product not found
        '500':
          description: Server error
    patch:
      tags: [products]
      summary: Partially update product by ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductPartialUpdate'
      responses:
        '200':
          description: Product successfully updated
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Product not found
        '500':
          description: Server error
  /api/orders:
    post:
      tags: [orders]
      summary: Create a new order
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderCreate'
      responses:
        '201':
          description: Order successfully created
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Server error
components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: "Smartphone"
        description:
          type: string
          example: "Latest model with advanced features"
        price:
          type: number
          format: float
          example: 999.99
        quantity:
          type: integer
          example: 50
      required:
        - id
        - name
        - description
        - price
        - quantity
    ProductCreate:
      type: object
      properties:
        name:
          type: string
          example: "Smartphone"
        description:
          type: string
          example: "Latest model with advanced features"
        price:
          type: number
          format: float
          example: 999.99
        quantity:
          type: integer
          example: 50
      required:
        - name
        - description
        - price
        - quantity
    ProductUpdate:
      type: object
      properties:
        name:
          type: string
          example: "Updated Smartphone"
        description:
          type: string
          example: "Updated description"
      required:
        - name
        - description
    ProductPartialUpdate:
      type: object
      properties:
        name:
          type: string
          example: "Partially Updated Smartphone"
        description:
          type: string
          example: "Partially updated description"
        price:
          type: number
          format: float
          example: 899.99
        quantity:
          type: integer
          example: 45
    OrderCreate:
      type: object
      properties:
        customer_name:
          type: string
          example: "John Doe"
        customer_email:
          type: string
          format: email
          example: "john.doe@example.com"
        customer_address:
          type: string
          example: "123 Main St, City, Country"
        order_details:
          type: array
          items:
            type: object
            properties:
              product_id:
                type: integer
                format: int64
                example: 1
              quantity:
                type: integer
                example: 2
            required:
              - product_id
              - quantity
      required:
        - customer_name
        - customer_email
        - customer_address
        - order_details
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT