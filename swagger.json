{
  "openapi": "3.0.0",
  "info": {
    "title": "Product API",
    "description": "API for managing products and orders",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "/api",
      "description": "Main API server"
    }
  ],
  "tags": [
    {
      "name": "products",
      "description": "Product operations"
    },
    {
      "name": "orders",
      "description": "Order operations"
    }
  ],
  "paths": {
    "/products": {
      "get": {
        "tags": [
          "products"
        ],
        "summary": "Get list of all products",
        "responses": {
          "200": {
            "description": "List of products successfully returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "404": {
            "description": "Products not found"
          }
        }
      },
      "post": {
        "tags": [
          "products"
        ],
        "summary": "Create a new product",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Product successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "tags": [
          "products"
        ],
        "summary": "Get product by ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Product not found"
          }
        }
      },
      "put": {
        "tags": [
          "products"
        ],
        "summary": "Fully update product by ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Product successfully updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Product not found"
          }
        }
      },
      "delete": {
        "tags": [
          "products"
        ],
        "summary": "Delete product by ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product successfully deleted"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Product not found"
          }
        }
      },
      "patch": {
        "tags": [
          "products"
        ],
        "summary": "Partially update product by ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductPartialUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Product successfully updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Product not found"
          }
        }
      }
    },
    "/orders": {
      "post": {
        "tags": [
          "orders"
        ],
        "summary": "Create a new order",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Order successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Product": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Premium Widget"
          },
          "description": {
            "type": "string",
            "example": "A high-quality widget for all your needs"
          },
          "price": {
            "type": "number",
            "format": "float",
            "minimum": 0,
            "example": 99.99
          },
          "quantity": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "example": 100
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "price",
          "quantity"
        ]
      },
      "ProductCreate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "example": "Premium Widget"
          },
          "description": {
            "type": "string",
            "minLength": 1,
            "example": "A high-quality widget for all your needs"
          },
          "price": {
            "type": "number",
            "format": "float",
            "minimum": 0,
            "example": 99.99
          },
          "quantity": {
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "example": 100
          }
        },
        "required": [
          "name",
          "description",
          "price",
          "quantity"
        ]
      },
      "ProductUpdate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "example": "Updated Widget"
          },
          "description": {
            "type": "string",
            "minLength": 1,
            "example": "An updated description"
          }
        },
        "required": [
          "name",
          "description"
        ]
      },
      "ProductPartialUpdate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "example": "Updated Widget"
          },
          "description": {
            "type": "string",
            "minLength": 1,
            "example": "An updated description"
          },
          "price": {
            "type": "number",
            "format": "float",
            "minimum": 0,
            "example": 89.99
          },
          "quantity": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "example": 50
          }
        }
      },
      "Order": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "customer_name": {
            "type": "string",
            "example": "John Doe"
          },
          "customer_email": {
            "type": "string",
            "format": "email",
            "example": "john@example.com"
          },
          "customer_address": {
            "type": "string",
            "example": "123 Main St, Anytown, USA"
          },
          "order_date": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "example": "processing"
          },
          "order_details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderDetail"
            }
          }
        }
      },
      "OrderCreate": {
        "type": "object",
        "properties": {
          "customer_name": {
            "type": "string",
            "minLength": 1,
            "example": "John Doe"
          },
          "customer_email": {
            "type": "string",
            "format": "email",
            "minLength": 1,
            "example": "john@example.com"
          },
          "customer_address": {
            "type": "string",
            "minLength": 1,
            "example": "123 Main St, Anytown, USA"
          },
          "order_details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderDetailCreate"
            }
          }
        },
        "required": [
          "customer_name",
          "customer_email",
          "customer_address",
          "order_details"
        ]
      },
      "OrderDetail": {
        "type": "object",
        "properties": {
          "product_id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "quantity": {
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "example": 2
          },
          "price": {
            "type": "number",
            "format": "float",
            "minimum": 0,
            "example": 99.99
          }
        }
      },
      "OrderDetailCreate": {
        "type": "object",
        "properties": {
          "product_id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "quantity": {
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "example": 2
          }
        },
        "required": [
          "product_id",
          "quantity"
        ]
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ]
}